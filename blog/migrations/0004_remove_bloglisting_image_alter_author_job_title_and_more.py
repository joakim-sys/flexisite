# Generated by Django 4.2.9 on 2024-02-21 07:55

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
        ("blog", "0003_author_bio_author_facebook_url_author_instagram_url_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="bloglisting",
            name="image",
        ),
        migrations.AlterField(
            model_name="author",
            name="job_title",
            field=models.CharField(
                blank=True, max_length=254, null=True, verbose_name="Job Title"
            ),
        ),
        migrations.AlterField(
            model_name="blogpage",
            name="body",
            field=wagtail.fields.StreamField(
                [
                    (
                        "heading_block",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "heading_text",
                                    wagtail.blocks.CharBlock(
                                        form_classname="title", required=True
                                    ),
                                ),
                                (
                                    "size",
                                    wagtail.blocks.ChoiceBlock(
                                        blank=True,
                                        choices=[
                                            ("", "Select a header size"),
                                            ("h2", "H2"),
                                            ("h3", "H3"),
                                            ("h4", "H4"),
                                        ],
                                        required=False,
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "paragraph_block",
                        wagtail.blocks.RichTextBlock(
                            features=["bold", "italic", "link"],
                            icon="pilcrow",
                            template="blocks/paragraph_block.html",
                        ),
                    ),
                    (
                        "image_block",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "image",
                                    wagtail.images.blocks.ImageChooserBlock(
                                        required=True
                                    ),
                                ),
                                ("caption", wagtail.blocks.CharBlock(required=False)),
                                (
                                    "attribution",
                                    wagtail.blocks.CharBlock(required=False),
                                ),
                            ]
                        ),
                    ),
                    (
                        "block_quote",
                        wagtail.blocks.StructBlock(
                            [
                                ("text", wagtail.blocks.TextBlock()),
                                (
                                    "attribute_name",
                                    wagtail.blocks.CharBlock(
                                        blank=True,
                                        label="e.g. Marvin Paul",
                                        required=False,
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "embed_block",
                        wagtail.embeds.blocks.EmbedBlock(
                            help_text="Insert an embed URL",
                            icon="media",
                            template="blocks/embed_block.html",
                        ),
                    ),
                ],
                blank=True,
                help_text="The main content of the post. You can add and organize different types of content blocks here.",
                null=True,
                use_json_field=True,
                verbose_name="Page Body",
            ),
        ),
        migrations.AlterField(
            model_name="blogpage",
            name="categories",
            field=modelcluster.fields.ParentalManyToManyField(
                blank=True,
                related_name="posts",
                to="blog.category",
                verbose_name="Select categories that best describe the content of the post.",
            ),
        ),
        migrations.AlterField(
            model_name="blogpage",
            name="date_published",
            field=models.DateField(
                blank=True, help_text="The date when the post was published.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="blogpage",
            name="image",
            field=models.ForeignKey(
                blank=True,
                help_text="An image that represents or is associated with the post. This image may be used as a thumbnail or featured image.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailimages.image",
                verbose_name="Featured Image",
            ),
        ),
        migrations.AlterField(
            model_name="blogpage",
            name="introduction",
            field=models.TextField(
                blank=True, help_text="A brief overview or introduction to the post."
            ),
        ),
        migrations.AlterField(
            model_name="blogpage",
            name="subtitle",
            field=models.CharField(
                blank=True,
                help_text="A short additional title or description for the post.",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="category",
            name="name",
            field=models.CharField(max_length=255, unique=True),
        ),
    ]
